# Generated by Django 4.2.7 on 2025-02-12 06:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('clave', models.CharField(max_length=9, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de clave no valido', regex='^((ib|im|ii|ie|isc|lg|am)[0-9]{6})|^(admin[0-9])|^([0-9]{6})$')], verbose_name='clave')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de correo no valido', regex='^((ib|im|ii|ie|isc|lg|am)[0-9]{6}@itsatlixco\\.edu\\.mx)|(^admin[0-9]@admin\\.com)|^([0-9]{6}@itsatlixco\\.edu\\.mx)$')], verbose_name='Correo')),
                ('nombres', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^([A-ZÑÁÉÍÓÚ][a-zñáéíóú]+)( [A-ZÑÁÉÍÓÚ][a-zñáéíóú]+)?$')], verbose_name='Nombres')),
                ('apellido_paterno', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[A-ZÑÁÉÍÓÚ][a-zñáéíóú]+')], verbose_name='Apellido Paterno')),
                ('apellido_materno', models.CharField(blank=True, max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[A-ZÑÁÉÍÓÚ][a-zñáéíóú]+')], verbose_name='Apellido Materno')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1, null=True, verbose_name='Sexo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Usuario activo')),
                ('is_staff', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(message='La contraseña debe tener al entre 8 y 15 caracteres, incluir una letra mayúscula, un número y un caracter especial.', regex='^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*#?&ñ_])[A-Za-z\\d@$!%*#?&ñ_]{8,15}$')], verbose_name='Contraseña')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('carrera_o_puesto', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('nombre_rol', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistorialMedico',
            fields=[
                ('id_historial', models.CharField(max_length=9, primary_key=True, serialize=False, unique=True, verbose_name='Id Historial')),
                ('enfermedades_cronicas', models.CharField(blank=True, max_length=150, null=True, verbose_name='Enfermedades crónicas')),
                ('alergias', models.CharField(blank=True, max_length=150, null=True, verbose_name='Alergias')),
                ('medicamento_usado', models.CharField(blank=True, max_length=150, null=True, verbose_name='Medicamento usado')),
                ('es_embarazada', models.BooleanField(default=False)),
                ('usa_drogas', models.BooleanField(default=False)),
                ('usa_cigarro', models.BooleanField(default=False)),
                ('ingiere_alcohol', models.BooleanField(default=False)),
                ('paciente', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='historial', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='carrera_o_puesto',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.area'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='role',
            field=models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuarios.role'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
